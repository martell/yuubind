{"version":3,"sources":["index.js"],"names":["matchesFilter","i","filter","split","every","elt","matchesFilterElement","slice","colonPos","indexOf","type","value","labels","some","l","name","Issue","badges","this","props","data","map","fgcolor","hex","r","parseInt","g","b","Math","sqrt","perceivedBrightness","color","bgcolor","key","id","className","style","backgroundColor","href","html_url","title","number","created_at","user","login","React","Component","List","filtered_issues","issues","search","order_filters","order","push","ordered_issues","forEach","includes","onChange","s","onSearchChange","target","Block","lists","Tab","blocks","onListSearchChange","onTabSearchChange","Dashboard","state","currentTab","startupConfig","defaultTab","config","refresh","tab","setState","block","list","Object","assign","tabs","fetchFrom","acc","url","console","log","fetch","then","resp","links","headers","get","json","sum","concat","nextRe","nextLink","find","match","undefined","next","exec","repo","keys","t","classes","onClick","setTab","reset","changeListSearch","changeTabSearch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff9d1965.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport startupConfig from './config.json';\n\nfunction matchesFilterElement(i, elt) {\n    if (elt === '') {\n        return true;\n    }\n    if (elt[0] === '-') {\n        return !matchesFilterElement(i, elt.slice(1));\n    }\n    const colonPos = elt.indexOf(':');\n    if (colonPos === -1) {\n        return false;\n    } else {\n        const type = elt.slice(0, colonPos);\n        const value = elt.slice(colonPos + 1);\n        if (type === 'label') {\n            return i.labels.some(l => l.name === value);\n        } else {\n            return false;\n        }\n    }\n}\n\nfunction matchesFilter(i, filter) {\n    return filter.split(' ').every(elt => matchesFilterElement(i, elt));\n}\n\nfunction perceivedBrightness(hex) {\n    const r = parseInt(hex.slice(0, 2), 16);\n    const g = parseInt(hex.slice(2, 4), 16);\n    const b = parseInt(hex.slice(4, 6), 16);\n    return Math.sqrt(r * r * 0.299 + g * g * 0.587 + b * b * 0.114);\n}\n\nclass Issue extends React.Component {\n    render() {\n        const badges = this.props.data.labels.map(l => {\n            const fgcolor = perceivedBrightness(l.color) > 128 ? '#000000' : '#ffffff';\n            const bgcolor = '#' + l.color;\n            return (\n                <span key={l.id}\n                      className=\"badge badge-pill mx-1\"\n                      style={{color: fgcolor, backgroundColor: bgcolor}}>\n                    {l.name}\n                </span>\n            );\n        });\n        return (\n            <li className=\"list-group-item\">\n                <div className=\"d-flex\">\n                    <div className=\"flex-grow-1\">\n                        <a className=\"text-body\" href={this.props.data.html_url}>\n                            <strong>{this.props.data.title}</strong>\n                        </a><br />\n                        <small>\n                            #{this.props.data.number} opened at {this.props.data.created_at} by {this.props.data.user.login}\n                        </small>\n                    </div>\n                    <div>\n                        {badges}\n                    </div>\n                </div>\n            </li>\n        );\n    }\n}\n\nclass List extends React.Component {\n    render() {\n        const filtered_issues = this.props.issues.filter(i => {\n            return matchesFilter(i, this.props.search);\n        });\n\n        const order_filters = this.props.order.slice();\n        order_filters.push(\"\");\n\n        const ordered_issues = [];\n        order_filters.forEach(filter => {\n            filtered_issues.forEach(i => {\n                if (matchesFilter(i, filter) && !ordered_issues.includes(i)) {\n                    ordered_issues.push(i);\n                }\n            });\n        });\n\n        const issues = ordered_issues.map(i => {\n            return (\n                <Issue key={i.id} data={i} />\n            );\n        });\n\n        return (\n            <div className=\"col\">\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <form>\n                            <div className=\"input-group\">\n                                <div className=\"input-group-prepend\">\n                                    <div className=\"input-group-text\">Search</div>\n                                </div>\n                                <input type=\"text\"\n                                       className=\"form-control\"\n                                       value={this.props.search}\n                                       onChange={(s) => this.props.onSearchChange(s.target.value)} />\n                            </div>\n                        </form>\n                    </li>\n                    {issues}\n                </ul>\n            </div>\n        );\n    }\n}\n\nclass Block extends React.Component {\n    render() {\n        const lists = this.props.lists.map((l, i) => {\n            return (\n                <List key={i}\n                      search={l.search}\n                      order={l.order || []}\n                      onSearchChange={(s) => this.props.onSearchChange(i, s)}\n                      issues={this.props.issues} />\n            );\n        });\n        return (\n            <div className=\"mt-3\">\n                <h1>\n                    {this.props.name}\n                </h1>\n                <div className=\"row\">\n                    {lists}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Tab extends React.Component {\n    render() {\n        const filtered_issues = this.props.issues.filter(i => {\n            return matchesFilter(i, this.props.search);\n        });\n        const blocks = this.props.blocks.map((b, i) => {\n            return (\n                <Block key={i}\n                       name={b.name}\n                       lists={b.lists}\n                       onSearchChange={(l, s) => this.props.onListSearchChange(i, l, s)}\n                       issues={filtered_issues} />\n            );\n        });\n        return (\n            <div className=\"container-fluid\">\n                <form>\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <div className=\"input-group-text\">Search</div>\n                        </div>\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               value={this.props.search}\n                               onChange={(s) => this.props.onTabSearchChange(s.target.value)} />\n                    </div>\n                </form>\n                {blocks}\n            </div>\n        );\n    }\n}\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentTab: startupConfig.defaultTab,\n            config: startupConfig,\n            issues: []\n        };\n    }\n\n    componentDidMount() {\n        this.refresh()\n    }\n\n    setTab(tab) {\n        this.setState({\n            currentTab: tab,\n            config: this.state.config,\n            issues: this.state.issues\n        });\n    }\n\n    changeListSearch(tab, block, list, search) {\n        const config = Object.assign({}, this.state.config);\n        config.tabs = Object.assign({}, config.tabs);\n        config.tabs[tab] = config.tabs[tab].slice();\n        config.tabs[tab].blocks[block] = Object.assign({}, config.tabs[tab].blocks[block]);\n        config.tabs[tab].blocks[block].lists = config.tabs[tab].blocks[block].lists.slice();\n        config.tabs[tab].blocks[block].lists[list] = Object.assign({}, config.tabs[tab].blocks[block].lists[list]);\n        config.tabs[tab].blocks[block].lists[list].search = search;\n        this.setState({\n            currentTab: this.state.currentTab,\n            config: config,\n            issues: this.state.issues\n        });\n    }\n\n    changeTabSearch(tab, search) {\n        const config = Object.assign({}, this.state.config);\n        config.tabs = Object.assign({}, config.tabs);\n        config.tabs[tab].search = search;\n        this.setState({\n            currentTab: this.state.currentTab,\n            config: config,\n            issues: this.state.issues\n        });\n    }\n\n    refresh() {\n        const fetchFrom = (acc, url) => {\n            console.log(\"Fetching \" + url);\n            fetch(url).then((resp) => {\n                const links = resp.headers.get('link');\n                resp.json().then(resp => {\n                    const sum = acc.concat(resp)\n                    this.setState({\n                        currentTab: this.state.currentTab,\n                        config: this.state.config,\n                        issues: sum\n                    });\n                    if (links !== null) {\n                        const nextRe = /<([^>]*)>; rel=\"next\"/;\n                        const nextLink = links.split(',').find(l => l.match(nextRe) !== null);\n                        if (nextLink !== undefined) {\n                            const next = nextRe.exec(nextLink)[1]\n                            fetchFrom(sum, next)\n                        }\n                    }\n                });\n            });\n        };\n        fetchFrom([], 'https://api.github.com/repos/' + this.state.config.repo + '/issues?sort=updated')\n    }\n\n    reset() {\n        this.setState({\n            currentTab: this.state.currentTab,\n            config: startupConfig,\n            issues: this.state.issues\n        })\n    }\n    \n    render() {\n        const tabs = Object.keys(this.state.config.tabs).map(t => {\n            const classes = t === this.state.currentTab ? \"nav-item active\" : \"nav-item\";\n            return (\n                <li key={t} className={classes}>\n                    <a className=\"nav-link\" onClick={() => this.setTab(t)}>\n                        {t}\n                    </a>\n                </li>\n            );\n        });\n        return (\n            <div className=\"container-fluid\">\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        {tabs}\n                    </ul>\n                    <button className=\"btn btn-outline-danger mr-3\" onClick={() => this.reset()}>\n                        Reset\n                    </button>\n                    <button className=\"btn btn-outline-warning\" onClick={() => this.refresh()}>\n                        Refresh\n                    </button>\n                </nav>\n                <div className=\"mt-2\">\n                    <Tab blocks={this.state.config.tabs[this.state.currentTab].blocks}\n                         search={this.state.config.tabs[this.state.currentTab].search}\n                         onListSearchChange={(b, l, s) => this.changeListSearch(this.state.currentTab, b, l, s)}\n                         onTabSearchChange={(s) => this.changeTabSearch(this.state.currentTab, s)}\n                         issues={this.state.issues} />\n                </div>\n            </div>\n        );\n    }\n}\n\n\nReactDOM.render(\n    <Dashboard />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}